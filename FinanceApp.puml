@startuml FinanceTrackApp
skinparam style strictuml
skinparam classAttributeIconSize 0
skinparam packageStyle rectangle
skinparam backgroundColor #fdfdfd

' ==== MODEL ====
package "üì¶ Model" {
    class User {
        - int userId
        - String name
        - int age
        - Gender gender
        - Map<TransactionType, TransactionList> transactionLists
        - List<AccountInterface> accountList
        - Set<String> categorySet
    }

    abstract class AbstractTransaction {
        - int transactionId
        - double amount
        - String reason
        - String category
        - Date date
        - TransactionType type
    }

    class IncomeTransaction
    class ExpenseTransaction
    class MovementTransaction

    AbstractTransaction <|-- IncomeTransaction
    AbstractTransaction <|-- ExpenseTransaction
    AbstractTransaction <|-- MovementTransaction

    class TransactionList {
        - List<AbstractTransaction> transactions
    }

    interface AccountInterface
    class Account {
        - int accountId
        - String name
        - double balance
        - AccounType type
    }

    AccountInterface <|.. Account
    User "1" o-- "*" AccountInterface
    User "1" o-- "*" TransactionList
    TransactionList "1" o-- "*" AbstractTransaction
}

' ==== SERVICES ====
package "üîß Services" {
    class BaseService {
        - User currentUser
    }

    class UserService
    class AccountService
    class TransactionService
    class FileIOService
    class MementoService

    BaseService <|-- UserService
    BaseService <|-- AccountService
    BaseService <|-- TransactionService
    BaseService <|-- FileIOService
    BaseService <|-- MementoService
}

' ==== I/O ====
package "üóÇÔ∏è IO / Import" {
    interface CsvImporter<T>
    interface CsvWriter<T>
    class CsvTransactionImporter
    class CsvExporter

    CsvImporter <|.. CsvTransactionImporter
    CsvWriter <|.. CsvExporter
    AbstractTransaction ..|> CsvSerializable
}

' ==== FACTORY ====
package "üè≠ Factory & Strategy" {
    interface TransactionCreator {
        + create(...)
    }

    class TransactionFactory {
        + createTransaction()
        - Map<TransactionType, TransactionCreator>
    }

    class IncomeTransactionCreator
    class ExpenseTransactionCreator
    class MovementTransactionCreator

    TransactionCreator <|.. IncomeTransactionCreator
    TransactionCreator <|.. ExpenseTransactionCreator
    TransactionCreator <|.. MovementTransactionCreator
}

' ==== UTILITIES ====
package "üîß Utilities" {
    class InputSanitizer {
        + validate(Object)
    }

    annotation Sanitize

    AbstractTransaction .. Sanitize
    User .. Sanitize
    Account .. Sanitize
}

' ==== MEMENTO ====
package "üíæ Memento" {
    class MementoService
    class UserSnapshot
    class UserMapper
    class UserMementoManager

    MementoService --> UserSnapshot
    UserSnapshot --> User
    MementoService --> UserMementoManager
}

@enduml
